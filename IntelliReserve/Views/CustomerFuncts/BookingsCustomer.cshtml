@model List<IntelliReserve.Models.Appointment>
@using IntelliReserve.Models

@{
    ViewData["Title"] = "My Bookings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background-color: #f9f9f9;
            color: #333;
            padding-top: 80px;
        }

        .navbar-custom {
            background-color: #fff9db;
            padding: 1rem 2rem;
            border-bottom: 1px solid #ddd;
            width: 100%;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            color: #333;
        }

            .navbar-brand i {
                color: #f9c10b;
                margin-right: 0.5rem;
            }

        .nav-link {
            color: #333 !important;
            font-weight: 500;
            margin-left: 1rem;
        }

        .navbar-nav {
            margin-left: auto;
        }

        .booking-header {
            background-color: #eaf4ff;
            padding: 2rem;
            margin-bottom: 2rem;
            border-radius: 1rem;
            text-align: center;
        }

        .card {
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
            transition: all 0.2s ease-in-out;
            border: none; /* Quitamos el borde por defecto de Bootstrap */
            border-radius: 1rem; /* Borde más redondeado */
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0,0,0,0.1);
            }

        .card-body {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            align-items: flex-start; /* Alinea el contenido a la izquierda */
            text-align: left; /* Alinea el texto a la izquierda */
            padding: 1.5rem;
        }

            .card-body h5 {
                width: 100%; /* Asegura que el título ocupe todo el ancho */
            }

        .card-info {
            width: 100%;
            margin-top: 0.5rem;
            font-size: 0.95rem;
        }

            .card-info strong {
                color: #555;
            }

        .card-buttons {
            width: 100%;
            display: flex;
            flex-direction: column; /* Botones apilados verticalmente */
            gap: 0.75rem; /* Espacio entre botones */
            margin-top: 1.5rem;
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg navbar-custom">
        <a class="navbar-brand" href="#"><i class="bi bi-star-fill"></i> IntelliReserve</a>
        <div class="ms-auto d-flex align-items-center">
            <ul class="navbar-nav me-3">
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Home" asp-action="CustomerHome">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" asp-controller="Appointment" asp-action="BookingsCustomer">My Bookings</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="User" asp-action="Profile">My Account</a>
                </li>
            </ul>
            <i class="bi bi-person-circle fs-3 me-3"></i>

            <form method="post" asp-controller="User" asp-action="Logout">
                <button type="submit" class="btn btn-outline-danger">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </button>
            </form>
        </div>
    </nav>

    <div class="container">
        <div class="text-center my-5">
            <h1 class="fw-bold">Your Upcoming Bookings</h1> @* Changed text to reflect "upcoming" filter *@
            <p class="text-muted">Here you can see your confirmed appointments.</p> @* Changed text *@
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success mt-3" role="alert">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mt-3" role="alert">
                @TempData["ErrorMessage"]
            </div>
        }

        @if (!Model.Any())
        {
            <div class="alert alert-warning text-center mt-4">You have no upcoming confirmed bookings at the moment.</div> @* Changed text *@
        }
        else
        {
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach (var booking in Model)
                {
                    <div class="col">
                        <div class="card h-100 p-3" style="background-color: #fff9db;"> @* Removed border-0 shadow-sm here as it's in the .card style now *@
                            <div class="card-body">
                                <h5 class="fw-bold text-center w-100 mb-3">@booking.ServiceSchedule.Service.Name</h5>
                                <div class="card-info">
                                    <p class="mb-1"><strong>Business:</strong> @booking.ServiceSchedule.Service.Business.Name</p>
                                    <p class="mb-1"><strong>Date:</strong> @booking.ServiceSchedule.StartDateTime.ToString("dd MMMM yyyy")</p>
                                    <p class="mb-1"><strong>Time:</strong> @booking.ServiceSchedule.StartDateTime.ToString("HH:mm") - @booking.ServiceSchedule.EndDateTime.ToString("HH:mm")</p>
                                    <p class="mb-1"><strong>Address:</strong> @booking.ServiceSchedule.Service.Business.Address</p>
                                    <p class="mb-1"><strong>Phone:</strong> @booking.ServiceSchedule.Service.Business.Phone</p>
                                    <p class="mb-0"><strong>Status:</strong> <span class="badge @(booking.Status == AppointmentStatus.Confirmed ? "bg-success" : booking.Status == AppointmentStatus.Canceled ? "bg-danger" : "bg-info")">@booking.Status</span></p>
                                </div>

                                <div class="card-buttons">
                                    @if (booking.Status == AppointmentStatus.Confirmed && booking.ServiceSchedule.StartDateTime > DateTime.UtcNow)
                                    {
                                        <form method="post" asp-controller="Appointment" asp-action="Cancel" asp-route-id="@booking.Id" onsubmit="return confirm('¿Está seguro de que desea cancelar esta reserva?');">
                                            <button type="submit" class="btn btn-danger w-100 rounded-pill">
                                                <i class="bi bi-x-circle me-2"></i> Cancel Booking
                                            </button>
                                            @Html.AntiForgeryToken()
                                        </form>
                                    }

                                   
                                    @if (booking.Status == AppointmentStatus.Completed)
                                    {
                                        <a class="btn btn-warning w-100 rounded-pill"
                                           href="@Url.Action("Create", "Review", new { businessId = booking.ServiceSchedule.Service.BusinessId })">
                                            <i class="bi bi-star me-2"></i> Leave a Review
                                        </a>
                                        <a class="btn btn-outline-dark w-100 rounded-pill"
                                           href="@Url.Action("ServicesCustomer", "User", new { businessId = booking.ServiceSchedule.Service.BusinessId })">
                                            <i class="bi bi-arrow-clockwise me-2"></i> Book Again
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div> @* This is the closing div for the .container that wraps the cards. It was correctly placed before. *@

    @if (ViewBag.TotalPages > 1)
    {
        <nav class="d-flex justify-content-center mt-4">
            <ul class="pagination">
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("BookingsCustomer", "Appointment", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">←</a>
                </li>

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("BookingsCustomer", "Appointment", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                    </li>
                }

                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("BookingsCustomer", "Appointment", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">→</a>
                </li>
            </ul>
        </nav>
    }

</body>